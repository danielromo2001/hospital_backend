version: "3.8"

services:
  db:
    image: postgres:16
    container_name: hospital_db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: .
    container_name: hospital_backend
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    restart: unless-stopped
    # usamos el script wait-for-db.py para esperar a la DB antes de lanzar uvicorn
    command: ["python", "/app/wait-for-db.py", "db", "5432", "--", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  pgdata:
